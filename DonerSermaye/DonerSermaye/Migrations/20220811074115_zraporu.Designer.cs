// <auto-generated />
using DonerSermaye.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DonerSermaye.Migrations
{
    [DbContext(typeof(donersermayeContext))]
    [Migration("20220811074115_zraporu")]
    partial class zraporu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DonerSermaye.Models.Data.Arge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.Property<string>("ArgeNo");

                    b.Property<DateTime>("Baslama");

                    b.Property<DateTime>("Bitis");

                    b.Property<int>("FirmaId");

                    b.Property<int>("PersonelId");

                    b.Property<double>("ProjeTutari");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("PersonelId");

                    b.ToTable("arge");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.ArgePersonel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArgeId");

                    b.Property<int>("PersonelId");

                    b.HasKey("Id");

                    b.HasIndex("ArgeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("argepersonel");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Ayarlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BSBALimiti")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Dekan");

                    b.Property<string>("Raportor");

                    b.Property<string>("Uye1");

                    b.Property<string>("Uye2");

                    b.Property<string>("Uye3");

                    b.Property<string>("Uye4");

                    b.Property<string>("Uye5");

                    b.Property<string>("Uye6");

                    b.HasKey("Id");

                    b.HasIndex("BSBALimiti")
                        .IsUnique();

                    b.ToTable("ayarlar");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Bolumgelir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BolumId");

                    b.Property<string>("Dagitim")
                        .HasColumnType("nchar(20)");

                    b.Property<int?>("IsId");

                    b.Property<decimal?>("Tutar")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("bolumgelir");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Bolumler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bolum")
                        .HasColumnName("bolum")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("KesintitipAyrintiId");

                    b.Property<decimal>("ilkdevirtutari");

                    b.HasKey("Id");

                    b.HasIndex("KesintitipAyrintiId");

                    b.ToTable("bolumler");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Duyurular", b =>
                {
                    b.Property<int>("DuyuruNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Duyuru_No");

                    b.Property<string>("Baslik")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Duyuru")
                        .HasColumnType("text");

                    b.Property<int?>("Gonderen");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime");

                    b.HasKey("DuyuruNo");

                    b.HasIndex("Gonderen");

                    b.ToTable("duyurular");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.EkmekFirma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Firma")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("KullaniciAdi")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sifre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("YetkiId")
                        .HasColumnName("yetkiId");

                    b.HasKey("Id");

                    b.ToTable("ekmekFirma");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.EkmekSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Adet");

                    b.Property<int?>("EkmekTipleriId");

                    b.Property<int?>("FirmaId");

                    b.Property<DateTime?>("SiparisTarihi");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("date");

                    b.Property<double?>("ToplamFiyat");

                    b.HasKey("Id");

                    b.HasIndex("EkmekTipleriId");

                    b.HasIndex("FirmaId");

                    b.ToTable("ekmekSiparis");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.EkmekTipleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double?>("BirimFiyat");

                    b.Property<string>("EkmekTipi")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Kdv");

                    b.HasKey("Id");

                    b.ToTable("ekmekTipleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.FaturaTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FaturaTipi1")
                        .HasColumnName("FaturaTipi")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("faturaTipi");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Firmalar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirmaAdi")
                        .HasColumnName("firmaAdi")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TcKimlikNo")
                        .HasColumnName("tcKimlikNo")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("VergiDairesi")
                        .HasColumnName("vergiDairesi")
                        .HasMaxLength(25);

                    b.Property<string>("VergiNo")
                        .HasColumnName("vergiNo")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("VergiNo")
                        .IsUnique()
                        .HasFilter("[vergiNo] IS NOT NULL");

                    b.ToTable("firmalar");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Hesaplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Hesap")
                        .HasColumnName("hesap")
                        .HasColumnType("nchar(30)");

                    b.Property<int>("KararSayisi");

                    b.Property<int>("ToplantiSayisi");

                    b.Property<DateTime>("ToplantiTarihi");

                    b.HasKey("Id");

                    b.ToTable("hesaplar");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.IsAyrinti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BolumId")
                        .HasColumnName("bolumId");

                    b.Property<int?>("PersonelId")
                        .HasColumnName("personelId");

                    b.Property<decimal?>("Tutar")
                        .HasColumnType("money");

                    b.Property<int>("ısId");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("ısId");

                    b.ToTable("isAyrinti");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Iskesintiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("IsId")
                        .HasColumnName("isId");

                    b.Property<int>("KesintiOranId");

                    b.HasKey("Id");

                    b.HasIndex("IsId");

                    b.ToTable("iskesintiler");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Isler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.Property<int?>("BolumId")
                        .HasColumnName("bolumId");

                    b.Property<int?>("BolumOnay")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bolumOnay")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Dagitim")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dagitim")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Durum")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("durum")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FaturaNo")
                        .HasColumnName("faturaNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FaturaTarihi")
                        .HasColumnName("faturaTarihi")
                        .HasColumnType("date");

                    b.Property<int?>("FaturaTipi")
                        .HasColumnName("faturaTipi");

                    b.Property<int?>("FirmaId")
                        .HasColumnName("firmaId");

                    b.Property<int?>("HesapId")
                        .HasColumnName("hesapId");

                    b.Property<int?>("Kdv")
                        .HasColumnName("kdv");

                    b.Property<int?>("Lab")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lab")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PersonelId");

                    b.Property<int?>("TurId")
                        .HasColumnName("turId");

                    b.Property<decimal?>("Tutar")
                        .HasColumnName("tutar")
                        .HasColumnType("money");

                    b.Property<bool>("faturayuklendimi");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("FaturaTipi");

                    b.HasIndex("FirmaId");

                    b.HasIndex("HesapId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("TurId");

                    b.ToTable("isler");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.IsTalepleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.Property<int?>("BolumId")
                        .HasColumnName("bolumId");

                    b.Property<int?>("BolumOnay")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bolumOnay")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("FirmaId")
                        .HasColumnName("firmaId");

                    b.Property<string>("KararSayisi");

                    b.Property<DateTime>("KararTarihi");

                    b.Property<int?>("PersonelId");

                    b.Property<string>("RedSebebi");

                    b.Property<string>("ToplantiSayisi");

                    b.Property<int?>("TurId")
                        .HasColumnName("turId");

                    b.Property<decimal?>("Tutar")
                        .HasColumnName("tutar")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("TurId");

                    b.ToTable("istalepleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Istekler", b =>
                {
                    b.Property<int>("IstekNo")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BolumId");

                    b.Property<string>("FaturaNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FaturaTarihi")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FirmaId");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("money");

                    b.Property<string>("Konu")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("Onay");

                    b.Property<int?>("OnayNo");

                    b.Property<string>("Ozet")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("TahakkukNo");

                    b.Property<int?>("TurNo");

                    b.Property<bool>("eFaturami");

                    b.HasKey("IstekNo");

                    b.HasIndex("BolumId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("TurNo");

                    b.ToTable("istekler");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.IstekTurleri", b =>
                {
                    b.Property<int>("TurNo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Tur")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("TurNo");

                    b.ToTable("istekTurleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.IsTurleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Tur")
                        .HasColumnName("tur")
                        .HasColumnType("nchar(40)");

                    b.HasKey("Id");

                    b.ToTable("isTurleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.KesintiOran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("KesintiTipId");

                    b.Property<decimal?>("Oran")
                        .HasColumnName("oran");

                    b.Property<int?>("TurId");

                    b.HasKey("Id");

                    b.HasIndex("TurId");

                    b.HasIndex("KesintiTipId", "TurId")
                        .IsUnique()
                        .HasFilter("[KesintiTipId] IS NOT NULL AND [TurId] IS NOT NULL");

                    b.ToTable("kesintiOran");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.KesintitipAyrinti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.HasKey("Id");

                    b.ToTable("KesintitipAyrinti");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Kesintitipleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KesintiTipi")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("kesintiTipAyrintiId");

                    b.HasKey("Id");

                    b.HasIndex("kesintiTipAyrintiId");

                    b.ToTable("kesintitipleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Personeller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ad")
                        .HasColumnName("ad")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("BolumId")
                        .HasColumnName("bolumId");

                    b.Property<string>("EPosta");

                    b.Property<string>("Iban")
                        .HasColumnName("iban")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sifre")
                        .HasColumnName("sifre")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Soyad")
                        .HasColumnName("soyad")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TcKimlikNo")
                        .HasColumnName("tcKimlikNo")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int?>("UnvanId")
                        .HasColumnName("unvanId");

                    b.Property<int?>("YetkiId")
                        .HasColumnName("yetkiId");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("UnvanId");

                    b.HasIndex("YetkiId");

                    b.ToTable("personeller");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Raporlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Rapor")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("raporlar");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Unvanlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Unvan")
                        .HasColumnName("unvan")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("unvanlar");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Yetkiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Yetki")
                        .HasColumnName("yetki")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("yetkiler");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Arge", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Firmalar", "Firma")
                        .WithMany("Arge")
                        .HasForeignKey("FirmaId")
                        .HasConstraintName("FK_arge_firma")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DonerSermaye.Models.Data.Personeller", "Personel")
                        .WithMany("Arge")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("FK_arge_personel")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.ArgePersonel", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Arge", "Arge")
                        .WithMany("ArgePersonel")
                        .HasForeignKey("ArgeId")
                        .HasConstraintName("FK_arge_argepersonel")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DonerSermaye.Models.Data.Personeller", "Personel")
                        .WithMany("ArgePersonel")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("FK_personel_argepersonel")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Bolumler", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.KesintitipAyrinti", "KesintitipAyrinti")
                        .WithMany()
                        .HasForeignKey("KesintitipAyrintiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Duyurular", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Personeller", "GonderenNavigation")
                        .WithMany("Duyurular")
                        .HasForeignKey("Gonderen")
                        .HasConstraintName("FK_duyurular_personeller");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.EkmekSiparis", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.EkmekTipleri", "EkmekTipleri")
                        .WithMany("EkmekSiparis")
                        .HasForeignKey("EkmekTipleriId")
                        .HasConstraintName("FK_ekmekSiparis_ekmektipleri");

                    b.HasOne("DonerSermaye.Models.Data.Firmalar", "Firma")
                        .WithMany("EkmekSiparis")
                        .HasForeignKey("FirmaId")
                        .HasConstraintName("FK_ekmekSiparis_personeller");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.IsAyrinti", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Personeller", "Personel")
                        .WithMany("IsAyrinti")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("FK_isAyrinti_personeller");

                    b.HasOne("DonerSermaye.Models.Data.Isler", "ıs")
                        .WithMany("IsAyrinti")
                        .HasForeignKey("ısId")
                        .HasConstraintName("FK_isAyrinti_isler1");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Iskesintiler", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Isler", "Is")
                        .WithMany("Iskesintiler")
                        .HasForeignKey("IsId")
                        .HasConstraintName("FK_iskesintiler_isler");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Isler", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Bolumler", "Bolum")
                        .WithMany("Isler")
                        .HasForeignKey("BolumId")
                        .HasConstraintName("FK_isler_bolumler");

                    b.HasOne("DonerSermaye.Models.Data.FaturaTipi", "FaturaTipiNavigation")
                        .WithMany("Isler")
                        .HasForeignKey("FaturaTipi")
                        .HasConstraintName("FK_isler_faturaTipi");

                    b.HasOne("DonerSermaye.Models.Data.Firmalar", "Firma")
                        .WithMany("Isler")
                        .HasForeignKey("FirmaId")
                        .HasConstraintName("FK_isler_firmalar");

                    b.HasOne("DonerSermaye.Models.Data.Hesaplar", "Hesap")
                        .WithMany("Isler")
                        .HasForeignKey("HesapId")
                        .HasConstraintName("FK_isler_hesaplar");

                    b.HasOne("DonerSermaye.Models.Data.Personeller", "Personel")
                        .WithMany("Isler")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("FK_isler_personeller");

                    b.HasOne("DonerSermaye.Models.Data.IsTurleri", "Tur")
                        .WithMany("Isler")
                        .HasForeignKey("TurId")
                        .HasConstraintName("FK_isler_isTurleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.IsTalepleri", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Bolumler", "Bolum")
                        .WithMany("IsTalepleri")
                        .HasForeignKey("BolumId")
                        .HasConstraintName("FK_istalepleri_bolumler");

                    b.HasOne("DonerSermaye.Models.Data.Firmalar", "Firma")
                        .WithMany("IsTalepleri")
                        .HasForeignKey("FirmaId")
                        .HasConstraintName("FK_istalepleri_firmalar");

                    b.HasOne("DonerSermaye.Models.Data.Personeller", "Personel")
                        .WithMany("IsTalepleri")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("FK_istalepleri_personeller");

                    b.HasOne("DonerSermaye.Models.Data.IsTurleri", "Tur")
                        .WithMany("IsTalepleri")
                        .HasForeignKey("TurId")
                        .HasConstraintName("FK_istalepleri_isTurleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Istekler", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Bolumler", "Bolum")
                        .WithMany("Istekler")
                        .HasForeignKey("BolumId")
                        .HasConstraintName("FK_istekler_bolumler");

                    b.HasOne("DonerSermaye.Models.Data.Firmalar", "Firma")
                        .WithMany("Istekler")
                        .HasForeignKey("FirmaId")
                        .HasConstraintName("FK_istekler_firmalar");

                    b.HasOne("DonerSermaye.Models.Data.IstekTurleri", "TurNoNavigation")
                        .WithMany("Istekler")
                        .HasForeignKey("TurNo")
                        .HasConstraintName("FK_istekler_istekTurleri");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.KesintiOran", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Kesintitipleri", "KesintiTip")
                        .WithMany()
                        .HasForeignKey("KesintiTipId");

                    b.HasOne("DonerSermaye.Models.Data.IsTurleri", "Tur")
                        .WithMany()
                        .HasForeignKey("TurId");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Kesintitipleri", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.KesintitipAyrinti", "kesintiTipAyrinti")
                        .WithMany("Kesintitipleri")
                        .HasForeignKey("kesintiTipAyrintiId")
                        .HasConstraintName("FK_kesintitipleri_kesintitipayrinti");
                });

            modelBuilder.Entity("DonerSermaye.Models.Data.Personeller", b =>
                {
                    b.HasOne("DonerSermaye.Models.Data.Bolumler", "Bolum")
                        .WithMany("Personeller")
                        .HasForeignKey("BolumId")
                        .HasConstraintName("FK_personeller_bolumler");

                    b.HasOne("DonerSermaye.Models.Data.Unvanlar", "Unvan")
                        .WithMany("Personeller")
                        .HasForeignKey("UnvanId")
                        .HasConstraintName("FK_personeller_unvanlar");

                    b.HasOne("DonerSermaye.Models.Data.Yetkiler", "Yetki")
                        .WithMany("Personeller")
                        .HasForeignKey("YetkiId")
                        .HasConstraintName("FK_personeller_yetkiler");
                });
#pragma warning restore 612, 618
        }
    }
}
